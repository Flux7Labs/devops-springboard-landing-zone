AWSTemplateFormatVersion: 2010-09-09
Description: AWS ECS Workshop - Network Stack
Metadata:
  VersionDate: 2017-07-24
  # Others

Parameters:
  StackPrefix:
    Type: String
    Description: Prefix used for naming the resources created. ${StackPrefix}-<resource>.
  ServiceBucketName:
    Type: String
    Description: Name for bucket we will use for our library
  ArtifactBucketName:
    Type: String
    Description: Name for bucket being used to read the artifacts
  PipelineIamRoleArn:
    Type: String
    Description: Arn of role to use for managing this pipeline
  GitHubUser:
    Description: 'User for GitHub'
    Type: String
  GitRepo:
    Description: 'URL for Git repo'
    Type: 'String'
  GitBranch:
    Description: 'Branch being deployed'
    Type: 'String'
  GitHubToken:
    Description: 'OAuth Token for repo access'
    Type: 'String'
    Default: ""

Resources:
  ServicesBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Ref ServiceBucketName

  BuildProject:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Description: !Join ['-',['build',!Ref ServiceName,'container']]
      Name: !Sub build-${ServiceName}-container
      ServiceRole: !Ref BuildIamRole
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            pre_build:
              commands:
                - echo Starting sync process
            build:
              commands:
                - aws s3 sync . s3://${BUCKET_NAME}/${BUCKET_PATH}/
            post_build:
              commands:
                - echo Finished sync process
      Environment:
        ComputeType: "BUILD_GENERAL1_SMALL"
        Image: "aws/codebuild/docker:1.12.1"
        Type: "LINUX_CONTAINER"
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: BUCKET_NAME
            Value: ${ServicesBucket}
          - Name: BUCKET_PATH
            Value: admin/${GitRepo}

  ServiceManagerPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: "service-manager-pipeline"
      ArtifactStore:
        Location: !Ref ArtifactBucketName
        Type: 'S3'
      RoleArn: !Ref PipelineIamRoleArn
      Stages:
        -
          Name: Source
          Actions:
            -
              Name: AppRepoSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitRepo
                Branch: !Ref GitBranch
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: GitHubArtifact
              RunOrder: '1'
